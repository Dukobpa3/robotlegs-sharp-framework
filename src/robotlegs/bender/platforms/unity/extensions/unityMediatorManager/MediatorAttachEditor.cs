//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEditor;
using UnityEngine;

[CustomEditor(typeof(MediatorAttach))]
public class MediatorAttachEditor : Editor
{
	/*============================================================================*/
	/* Private Functions                                                          */
	/*============================================================================*/
	
	public override void OnInspectorGUI()
	{
		MediatorAttach ma = target as MediatorAttach;
		EditorGUILayout.LabelField ("View", ma.View.GetType().Name);
		foreach (object mediator in ma.Mediators) 
		{
			EditorGUILayout.LabelField ("Mediator", mediator.GetType().Name);
		}

//		string assetPath = AssetDatabase.GetAssetPath(ma);
//		EditorGUILayout.LabelField("MediatorPath", assetPath);

//		MonoScript.FromScriptableObject (ma);
		
//		if (ma.Mediator )
//			EditorGUILayout.ObjectField("Script", MonoScript.FromMonoBehaviour(ma), typeof(MonoScript), false);

//		MonoScript[] scripts = Object.FindObjectsOfType<MonoScript> ();
//		EditorGUILayout.IntField("length", scripts.Length);

//		foreach (MonoScript script in scripts) 
//		{
//			if (script.GetClass() == ma.Mediator.GetType())
//			{
//				EditorGUILayout.ObjectField("Script2", script, typeof(MonoScript), false);
//			}
//		}

//			EditorGUILayout.ObjectField("Script2", MonoScript.FromScriptableObject(ma), typeof(MonoScript), false);

	}
}

